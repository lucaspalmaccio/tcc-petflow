{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Perfil } from '../../../../core/services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../../core/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" E-mail inv\\u00E1lido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" Senha \\u00E9 obrigat\\u00F3ria. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.errorMessage, \" \");\n  }\n}\nexport class LoginComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.errorMessage = null;\n    this.isLoading = false;\n    this.showPassword = false;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      senha_normal: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    const perfil = this.authService.getUserRole();\n    if (this.authService.isAuthenticated() && perfil) {\n      this.redirectUser(perfil);\n    }\n  }\n  onSubmit() {\n    if (this.loginForm.invalid) {\n      this.errorMessage = \"Por favor, preencha o e-mail e a senha.\";\n      return;\n    }\n    this.isLoading = true;\n    this.errorMessage = null;\n    const {\n      email,\n      senha_normal\n    } = this.loginForm.value;\n    this.authService.login(email, senha_normal).subscribe({\n      next: response => {\n        this.isLoading = false;\n        if (response.userRole) {\n          this.redirectUser(response.userRole);\n        } else {\n          this.errorMessage = \"E-mail ou senha inválidos.\";\n        }\n      },\n      error: () => {\n        this.isLoading = false;\n        this.errorMessage = \"E-mail ou senha inválidos.\";\n      }\n    });\n  }\n  cadastrarCliente() {\n    this.router.navigate(['/cliente/cadastro']);\n  }\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n  redirectUser(perfil) {\n    if (!perfil) {\n      this.errorMessage = \"Perfil de usuário não reconhecido.\";\n      this.authService.logout();\n      return;\n    }\n    switch (perfil) {\n      case Perfil.ADMIN:\n        this.router.navigate(['/admin/clientes']);\n        break;\n      case Perfil.CLIENTE:\n        this.router.navigate(['/cliente/meus-agendamentos']);\n        break;\n      default:\n        this.errorMessage = \"Perfil de usuário não reconhecido.\";\n        this.authService.logout();\n        break;\n    }\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 22,\n      vars: 8,\n      consts: [[1, \"login-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Digite seu e-mail\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"for\", \"senha_normal\"], [1, \"password-wrapper\"], [\"id\", \"senha_normal\", \"formControlName\", \"senha_normal\", \"placeholder\", \"Digite sua senha\", 3, \"type\"], [\"type\", \"button\", 1, \"toggle-password\", 3, \"click\"], [\"type\", \"submit\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn-secondary\", 3, \"click\"], [1, \"error-message\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"E-mail\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵtemplate(8, LoginComponent_div_8_Template, 2, 0, \"div\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 6);\n          i0.ɵɵtext(11, \"Senha\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 7);\n          i0.ɵɵelement(13, \"input\", 8);\n          i0.ɵɵelementStart(14, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_14_listener() {\n            return ctx.togglePassword();\n          });\n          i0.ɵɵtext(15);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 2, 0, \"div\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(17, LoginComponent_div_17_Template, 2, 1, \"div\", 5);\n          i0.ɵɵelementStart(18, \"button\", 10);\n          i0.ɵɵtext(19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_20_listener() {\n            return ctx.cadastrarCliente();\n          });\n          i0.ɵɵtext(21, \" Cadastrar como Cliente \");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_4_0;\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.touched) && ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.invalid));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", ctx.showPassword ? \"Ocultar\" : \"Mostrar\", \" \");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.loginForm.get(\"senha_normal\")) == null ? null : tmp_4_0.touched) && ((tmp_4_0 = ctx.loginForm.get(\"senha_normal\")) == null ? null : tmp_4_0.invalid));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.isLoading ? \"Entrando...\" : \"Entrar\", \" \");\n        }\n      },\n      dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".login-container[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  margin: 4rem auto;\\n  padding: 2rem;\\n  border-radius: 8px;\\n  background-color: var(--color-white);\\n  box-shadow: var(--shadow-md);\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 2rem;\\n  font-size: 1.75rem;\\n  color: var(--color-primary);\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 1.5rem;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  padding: 0.5rem 0.75rem;\\n  border-radius: 4px;\\n  border: 1px solid var(--color-border);\\n}\\n\\n.password-wrapper[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.toggle-password[_ngcontent-%COMP%] {\\n  margin-left: 0.5rem;\\n  padding: 0.3rem 0.5rem;\\n  border: none;\\n  background: var(--color-light);\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n\\nbutton[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 0.6rem 1rem;\\n  border: none;\\n  border-radius: 4px;\\n  background-color: var(--color-primary);\\n  color: var(--color-white);\\n  font-size: 1rem;\\n  cursor: pointer;\\n}\\n\\nbutton[disabled][_ngcontent-%COMP%] {\\n  background-color: #999;\\n  cursor: not-allowed;\\n}\\n\\n.btn-secondary[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin-top: 0.5rem;\\n  padding: 0.5rem 1rem;\\n  border: 1px solid var(--color-border);\\n  border-radius: 4px;\\n  background-color: var(--color-light);\\n  color: var(--color-dark);\\n  cursor: pointer;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n  color: var(--color-danger);\\n  font-size: 0.875rem;\\n  margin-top: 0.25rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvYWRtaW4vYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLG9DQUFvQztFQUNwQyw0QkFBNEI7QUFDOUI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQiwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsYUFBYTtFQUNiLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2QixrQkFBa0I7RUFDbEIscUNBQXFDO0FBQ3ZDOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLDhCQUE4QjtFQUM5QixrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxvQkFBb0I7RUFDcEIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixzQ0FBc0M7RUFDdEMseUJBQXlCO0VBQ3pCLGVBQWU7RUFDZixlQUFlO0FBQ2pCOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsb0JBQW9CO0VBQ3BCLHFDQUFxQztFQUNyQyxrQkFBa0I7RUFDbEIsb0NBQW9DO0VBQ3BDLHdCQUF3QjtFQUN4QixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsMEJBQTBCO0VBQzFCLG1CQUFtQjtFQUNuQixtQkFBbUI7QUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tY29udGFpbmVyIHtcclxuICBtYXgtd2lkdGg6IDQwMHB4O1xyXG4gIG1hcmdpbjogNHJlbSBhdXRvO1xyXG4gIHBhZGRpbmc6IDJyZW07XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLXdoaXRlKTtcclxuICBib3gtc2hhZG93OiB2YXIoLS1zaGFkb3ctbWQpO1xyXG59XHJcblxyXG5oMiB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIG1hcmdpbi1ib3R0b206IDJyZW07XHJcbiAgZm9udC1zaXplOiAxLjc1cmVtO1xyXG4gIGNvbG9yOiB2YXIoLS1jb2xvci1wcmltYXJ5KTtcclxufVxyXG5cclxuLmZvcm0tZ3JvdXAge1xyXG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbmlucHV0IHtcclxuICBwYWRkaW5nOiAwLjVyZW0gMC43NXJlbTtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tY29sb3ItYm9yZGVyKTtcclxufVxyXG5cclxuLnBhc3N3b3JkLXdyYXBwZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLnRvZ2dsZS1wYXNzd29yZCB7XHJcbiAgbWFyZ2luLWxlZnQ6IDAuNXJlbTtcclxuICBwYWRkaW5nOiAwLjNyZW0gMC41cmVtO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvci1saWdodCk7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0ge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDAuNnJlbSAxcmVtO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItcHJpbWFyeSk7XHJcbiAgY29sb3I6IHZhcigtLWNvbG9yLXdoaXRlKTtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG5idXR0b25bZGlzYWJsZWRdIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5O1xyXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XHJcbn1cclxuXHJcbi5idG4tc2Vjb25kYXJ5IHtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXJnaW4tdG9wOiAwLjVyZW07XHJcbiAgcGFkZGluZzogMC41cmVtIDFyZW07XHJcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tY29sb3ItYm9yZGVyKTtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItbGlnaHQpO1xyXG4gIGNvbG9yOiB2YXIoLS1jb2xvci1kYXJrKTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5lcnJvci1tZXNzYWdlIHtcclxuICBjb2xvcjogdmFyKC0tY29sb3ItZGFuZ2VyKTtcclxuICBmb250LXNpemU6IDAuODc1cmVtO1xyXG4gIG1hcmdpbi10b3A6IDAuMjVyZW07XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","Perfil","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r2","errorMessage","LoginComponent","constructor","fb","authService","router","isLoading","showPassword","loginForm","group","email","required","senha_normal","ngOnInit","perfil","getUserRole","isAuthenticated","redirectUser","onSubmit","invalid","value","login","subscribe","next","response","userRole","error","cadastrarCliente","navigate","togglePassword","logout","ADMIN","CLIENTE","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵtemplate","LoginComponent_div_8_Template","LoginComponent_Template_button_click_14_listener","LoginComponent_div_16_Template","LoginComponent_div_17_Template","LoginComponent_Template_button_click_20_listener","ɵɵproperty","tmp_1_0","get","touched","tmp_4_0"],"sources":["C:\\TCC\\petflow\\petflow-web\\src\\app\\features\\admin\\auth\\login\\login.component.ts","C:\\TCC\\petflow\\petflow-web\\src\\app\\features\\admin\\auth\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, Perfil } from '../../../../core/services/auth.service';\r\n\r\n@Component({\r\nselector: 'app-login',\r\ntemplateUrl: './login.component.html',\r\nstyleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\nloginForm: FormGroup;\r\nerrorMessage: string | null = null;\r\nisLoading = false;\r\nshowPassword = false;\r\n\r\nconstructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      senha_normal: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const perfil = this.authService.getUserRole();\r\n    if (this.authService.isAuthenticated() && perfil) {\r\n      this.redirectUser(perfil);\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.loginForm.invalid) {\r\n      this.errorMessage = \"Por favor, preencha o e-mail e a senha.\";\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    this.errorMessage = null;\r\n\r\n    const { email, senha_normal } = this.loginForm.value;\r\n\r\n    this.authService.login(email, senha_normal).subscribe({\r\n      next: (response) => {\r\n        this.isLoading = false;\r\n        if (response.userRole) {\r\n          this.redirectUser(response.userRole);\r\n        } else {\r\n          this.errorMessage = \"E-mail ou senha inválidos.\";\r\n        }\r\n      },\r\n      error: () => {\r\n        this.isLoading = false;\r\n        this.errorMessage = \"E-mail ou senha inválidos.\";\r\n      }\r\n    });\r\n  }\r\n\r\n  cadastrarCliente(): void {\r\n    this.router.navigate(['/cliente/cadastro']);\r\n  }\r\n\r\n  togglePassword(): void {\r\n    this.showPassword = !this.showPassword;\r\n  }\r\n\r\n  private redirectUser(perfil: Perfil | null): void {\r\n    if (!perfil) {\r\n      this.errorMessage = \"Perfil de usuário não reconhecido.\";\r\n      this.authService.logout();\r\n      return;\r\n    }\r\n\r\n    switch (perfil) {\r\n      case Perfil.ADMIN:\r\n        this.router.navigate(['/admin/clientes']);\r\n        break;\r\n      case Perfil.CLIENTE:\r\n        this.router.navigate(['/cliente/meus-agendamentos']);\r\n        break;\r\n      default:\r\n        this.errorMessage = \"Perfil de usuário não reconhecido.\";\r\n        this.authService.logout();\r\n        break;\r\n    }\r\n  }\r\n}","<div class=\"login-container\">\r\n    <h2>Login</h2>\r\n\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <!-- E-mail -->\r\n        <div class=\"form-group\">\r\n            <label for=\"email\">E-mail</label>\r\n            <input id=\"email\" type=\"email\" formControlName=\"email\" placeholder=\"Digite seu e-mail\">\r\n            <div *ngIf=\"loginForm.get('email')?.touched && loginForm.get('email')?.invalid\" class=\"error-message\">\r\n                E-mail inválido.\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Senha -->\r\n        <div class=\"form-group\">\r\n            <label for=\"senha_normal\">Senha</label>\r\n            <div class=\"password-wrapper\">\r\n                <input\r\n                        id=\"senha_normal\"\r\n                        [type]=\"showPassword ? 'text' : 'password'\"\r\n                        formControlName=\"senha_normal\"\r\n                        placeholder=\"Digite sua senha\">\r\n                <button type=\"button\" class=\"toggle-password\" (click)=\"togglePassword()\">\r\n                    {{ showPassword ? 'Ocultar' : 'Mostrar' }}\r\n                </button>\r\n            </div>\r\n            <div *ngIf=\"loginForm.get('senha_normal')?.touched && loginForm.get('senha_normal')?.invalid\" class=\"error-message\">\r\n                Senha é obrigatória.\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Mensagem de erro geral -->\r\n        <div *ngIf=\"errorMessage\" class=\"error-message\">\r\n            {{ errorMessage }}\r\n        </div>\r\n\r\n        <!-- Botão -->\r\n        <button type=\"submit\" [disabled]=\"isLoading\">\r\n            {{ isLoading ? 'Entrando...' : 'Entrar' }}\r\n        </button>\r\n\r\n        <!-- Link cadastro -->\r\n        <button type=\"button\" class=\"btn-secondary\" (click)=\"cadastrarCliente()\">\r\n            Cadastrar como Cliente\r\n        </button>\r\n    </form>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}