{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction CadastrarAdminComponent_small_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Nome \\u00E9 obrigat\\u00F3rio.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CadastrarAdminComponent_small_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Email inv\\u00E1lido.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CadastrarAdminComponent_small_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Senha inv\\u00E1lida.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CadastrarAdminComponent_p_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 10);\n    i0.ɵɵtext(1, \"\\u2705 Administrador cadastrado com sucesso!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CadastrarAdminComponent_p_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\u274C \", ctx_r4.erro, \"\");\n  }\n}\nlet CadastrarAdminComponent = /*#__PURE__*/(() => {\n  class CadastrarAdminComponent {\n    constructor(fb, http, router) {\n      this.fb = fb;\n      this.http = http;\n      this.router = router;\n      this.sucesso = false;\n      this.erro = null;\n      this.carregando = false;\n      this.form = this.fb.group({\n        nome: ['', [Validators.required]],\n        email: ['', [Validators.required, Validators.email]],\n        senha: ['', [Validators.required, Validators.minLength(6)]]\n      });\n    }\n    cadastrar() {\n      if (this.form.invalid) {\n        this.form.markAllAsTouched();\n        return;\n      }\n      this.carregando = true;\n      this.erro = null;\n      const novoAdmin = {\n        nome: this.form.value.nome,\n        email: this.form.value.email,\n        senha: this.form.value.senha,\n        perfil: 'ADMIN'\n      };\n      this.http.post(`${environment.apiUrl}/usuarios`, novoAdmin).subscribe({\n        next: () => {\n          this.sucesso = true;\n          this.carregando = false;\n          setTimeout(() => this.router.navigate(['/admin']), 1500);\n        },\n        error: err => {\n          console.error(err);\n          this.erro = err.error?.message || 'Erro ao cadastrar administrador.';\n          this.carregando = false;\n        }\n      });\n    }\n    static {\n      this.ɵfac = function CadastrarAdminComponent_Factory(t) {\n        return new (t || CadastrarAdminComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: CadastrarAdminComponent,\n        selectors: [[\"app-cadastrar-admin\"]],\n        decls: 23,\n        vars: 8,\n        consts: [[1, \"cadastrar-admin-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"nome\", \"placeholder\", \"Nome completo\"], [4, \"ngIf\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"exemplo@email.com\"], [\"type\", \"password\", \"formControlName\", \"senha\", \"placeholder\", \"M\\u00EDnimo 6 caracteres\"], [\"type\", \"submit\", 3, \"disabled\"], [\"class\", \"sucesso\", 4, \"ngIf\"], [\"class\", \"erro\", 4, \"ngIf\"], [1, \"sucesso\"], [1, \"erro\"]],\n        template: function CadastrarAdminComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Cadastrar Administrador\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function CadastrarAdminComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.cadastrar();\n            });\n            i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n            i0.ɵɵtext(6, \"Nome\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"input\", 3);\n            i0.ɵɵtemplate(8, CadastrarAdminComponent_small_8_Template, 2, 0, \"small\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\");\n            i0.ɵɵtext(11, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(12, \"input\", 5);\n            i0.ɵɵtemplate(13, CadastrarAdminComponent_small_13_Template, 2, 0, \"small\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"div\", 2)(15, \"label\");\n            i0.ɵɵtext(16, \"Senha\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(17, \"input\", 6);\n            i0.ɵɵtemplate(18, CadastrarAdminComponent_small_18_Template, 2, 0, \"small\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"button\", 7);\n            i0.ɵɵtext(20);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(21, CadastrarAdminComponent_p_21_Template, 2, 0, \"p\", 8);\n            i0.ɵɵtemplate(22, CadastrarAdminComponent_p_22_Template, 2, 1, \"p\", 9);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            let tmp_1_0;\n            let tmp_2_0;\n            let tmp_3_0;\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.form);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.form.get(\"nome\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.form.get(\"nome\")) == null ? null : tmp_1_0.touched));\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.form.get(\"email\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.form.get(\"email\")) == null ? null : tmp_2_0.touched));\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.form.get(\"senha\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.form.get(\"senha\")) == null ? null : tmp_3_0.touched));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"disabled\", ctx.carregando);\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate1(\" \", ctx.carregando ? \"Cadastrando...\" : \"Cadastrar\", \" \");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.sucesso);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.erro);\n          }\n        },\n        dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\".cadastrar-admin-container[_ngcontent-%COMP%]{max-width:400px;margin:40px auto;padding:24px;background:#fff;border-radius:12px;box-shadow:0 4px 12px #0000001a;h2 {text-align: center; margin-bottom: 20px;} .form-group {display: flex; flex-direction: column; margin-bottom: 15px; label {font-weight: 600; margin-bottom: 5px;} input {padding: 8px 10px; border: 1px solid #ccc; border-radius: 6px;} small {color: red; font-size: 12px; margin-top: 4px;}} button {width: 100%; padding: 10px; border: none; background-color: #1976d2; color: white; font-weight: bold; border-radius: 6px; cursor: pointer; transition: background .3s; &:disabled {background-color: #aaa;} &:hover:not(:disabled) {background-color: #125ca1;}} .sucesso {color: green; text-align: center; margin-top: 10px;} .erro {color: red; text-align: center; margin-top: 10px;}}\"]\n      });\n    }\n  }\n  return CadastrarAdminComponent;\n})();\nexport { CadastrarAdminComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}