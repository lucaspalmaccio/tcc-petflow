{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { authGuard } from './core/guards/auth.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  redirectTo: '/auth/login',\n  pathMatch: 'full'\n}, {\n  path: 'auth',\n  loadChildren: () => import('./features/auth/auth.module').then(m => m.AuthModule)\n}, {\n  path: 'admin',\n  loadChildren: () => import('./features/admin/admin.module').then(m => m.AdminModule),\n  canActivate: [authGuard],\n  data: {\n    roles: ['ADMIN']\n  }\n}, {\n  path: 'cliente',\n  loadChildren: () => import('./features/cliente/cliente.module').then(m => m.ClienteModule),\n  canActivate: [authGuard],\n  data: {\n    roles: ['CLIENTE']\n  }\n}, {\n  path: '**',\n  redirectTo: '/auth/login'\n}];\nexport class AppRoutingModule {\n  static {\n    this.ɵfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forRoot(routes), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","authGuard","routes","path","redirectTo","pathMatch","loadChildren","then","m","AuthModule","AdminModule","canActivate","data","roles","ClienteModule","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["C:\\TCC\\petflow\\petflow-web\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { authGuard } from './core/guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n{ path: '', redirectTo: '/auth/login', pathMatch: 'full' },\r\n{\r\npath: 'auth',\r\nloadChildren: () => import('./features/auth/auth.module').then(m => m.AuthModule)\r\n  },\r\n  {\r\n    path: 'admin',\r\n    loadChildren: () => import('./features/admin/admin.module').then(m => m.AdminModule),\r\n    canActivate: [authGuard],\r\n    data: { roles: ['ADMIN'] }\r\n  },\r\n  {\r\n    path: 'cliente',\r\n    loadChildren: () => import('./features/cliente/cliente.module').then(m => m.ClienteModule),\r\n    canActivate: [authGuard],\r\n    data: { roles: ['CLIENTE'] }\r\n  },\r\n  { path: '**', redirectTo: '/auth/login' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,SAAS,QAAQ,0BAA0B;;;AAEpD,MAAMC,MAAM,GAAW,CACvB;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE,aAAa;EAAEC,SAAS,EAAE;AAAM,CAAE,EAC1D;EACAF,IAAI,EAAE,MAAM;EACZG,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU;CAC7E,EACD;EACEN,IAAI,EAAE,OAAO;EACbG,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,+BAA+B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACE,WAAW,CAAC;EACpFC,WAAW,EAAE,CAACV,SAAS,CAAC;EACxBW,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAC;CACzB,EACD;EACEV,IAAI,EAAE,SAAS;EACfG,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,mCAAmC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACM,aAAa,CAAC;EAC1FH,WAAW,EAAE,CAACV,SAAS,CAAC;EACxBW,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,SAAS;EAAC;CAC3B,EACD;EAAEV,IAAI,EAAE,IAAI;EAAEC,UAAU,EAAE;AAAa,CAAE,CAC1C;AAMD,OAAM,MAAOW,gBAAgB;;;uBAAhBA,gBAAgB;IAAA;EAAA;;;YAAhBA;IAAgB;EAAA;;;gBAHjBf,YAAY,CAACgB,OAAO,CAACd,MAAM,CAAC,EAC5BF,YAAY;IAAA;EAAA;;;2EAEXe,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAAlB,YAAA;IAAAmB,OAAA,GAFjBnB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}