{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nclass CadastrarAdminComponent {\n  constructor(fb, http, router) {\n    this.fb = fb;\n    this.http = http;\n    this.router = router;\n    this.sucesso = false;\n    this.erro = null;\n    this.carregando = false;\n    this.form = this.fb.group({\n      nome: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      senha: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  cadastrar() {\n    if (this.form.invalid) {\n      this.form.markAllAsTouched();\n      return;\n    }\n    this.carregando = true;\n    this.erro = null;\n    const novoAdmin = {\n      nome: this.form.value.nome,\n      email: this.form.value.email,\n      senha: this.form.value.senha,\n      perfil: 'ADMIN'\n    };\n    this.http.post(`${environment.apiUrl}/usuarios`, novoAdmin).subscribe({\n      next: () => {\n        this.sucesso = true;\n        this.carregando = false;\n        setTimeout(() => this.router.navigate(['/admin']), 1500);\n      },\n      error: err => {\n        console.error(err);\n        this.erro = err.error?.message || 'Erro ao cadastrar administrador.';\n        this.carregando = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function CadastrarAdminComponent_Factory(t) {\n      return new (t || CadastrarAdminComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CadastrarAdminComponent,\n      selectors: [[\"app-cadastrar-admin\"]],\n      decls: 15,\n      vars: 2,\n      consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"nome\", \"type\", \"text\"], [\"formControlName\", \"email\", \"type\", \"email\"], [\"formControlName\", \"senha\", \"type\", \"password\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function CadastrarAdminComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Cadastrar Novo Administrador\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function CadastrarAdminComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.cadastrar();\n          });\n          i0.ɵɵelementStart(4, \"label\");\n          i0.ɵɵtext(5, \"Nome:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"input\", 2);\n          i0.ɵɵelementStart(7, \"label\");\n          i0.ɵɵtext(8, \"Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 3);\n          i0.ɵɵelementStart(10, \"label\");\n          i0.ɵɵtext(11, \"Senha:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 4);\n          i0.ɵɵelementStart(13, \"button\", 5);\n          i0.ɵɵtext(14, \"Cadastrar\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n        }\n      },\n      styles: [\"\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\t\\\"use strict\\\";\\n\\n \\t\\n\\n \\t\\n\\n })()[_ngcontent-%COMP%]\\n;\"]\n    });\n  }\n}\nexport { CadastrarAdminComponent };","map":{"version":3,"names":["Validators","environment","CadastrarAdminComponent","constructor","fb","http","router","sucesso","erro","carregando","form","group","nome","required","email","senha","minLength","cadastrar","invalid","markAllAsTouched","novoAdmin","value","perfil","post","apiUrl","subscribe","next","setTimeout","navigate","error","err","console","message","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","selectors","decls","vars","consts","template","CadastrarAdminComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CadastrarAdminComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\TCC\\petflow\\petflow-web\\src\\app\\features\\admin\\pages\\cadastrar-admin\\cadastrar-admin.component.ts","C:\\TCC\\petflow\\petflow-web\\src\\app\\features\\admin\\pages\\cadastrar-admin\\cadastrar-admin.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\nselector: 'app-cadastrar-admin',\r\ntemplateUrl: './cadastrar-admin.component.html',\r\nstyleUrls: ['./cadastrar-admin.component.scss']\r\n})\r\nexport class CadastrarAdminComponent {\r\nform: FormGroup;\r\nsucesso = false;\r\nerro: string | null = null;\r\ncarregando = false;\r\n\r\nconstructor(\r\n    private fb: FormBuilder,\r\n    private http: HttpClient,\r\n    private router: Router\r\n  ) {\r\n    this.form = this.fb.group({\r\n      nome: ['', [Validators.required]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      senha: ['', [Validators.required, Validators.minLength(6)]],\r\n    });\r\n  }\r\n\r\n  cadastrar() {\r\n    if (this.form.invalid) {\r\n      this.form.markAllAsTouched();\r\n      return;\r\n    }\r\n\r\n    this.carregando = true;\r\n    this.erro = null;\r\n\r\n    const novoAdmin = {\r\n      nome: this.form.value.nome,\r\n      email: this.form.value.email,\r\n      senha: this.form.value.senha,\r\n      perfil: 'ADMIN'\r\n    };\r\n\r\n    this.http.post(`${environment.apiUrl}/usuarios`, novoAdmin).subscribe({\r\n      next: () => {\r\n        this.sucesso = true;\r\n        this.carregando = false;\r\n        setTimeout(() => this.router.navigate(['/admin']), 1500);\r\n      },\r\n      error: (err) => {\r\n        console.error(err);\r\n        this.erro = err.error?.message || 'Erro ao cadastrar administrador.';\r\n        this.carregando = false;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h2>Cadastrar Novo Administrador</h2>\r\n\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"cadastrar()\">\r\n        <label>Nome:</label>\r\n        <input formControlName=\"nome\" type=\"text\" />\r\n\r\n        <label>Email:</label>\r\n        <input formControlName=\"email\" type=\"email\" />\r\n\r\n        <label>Senha:</label>\r\n        <input formControlName=\"senha\" type=\"password\" />\r\n\r\n        <button type=\"submit\" [disabled]=\"form.invalid\">Cadastrar</button>\r\n    </form>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}