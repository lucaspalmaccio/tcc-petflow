{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { authGuard } from './core/guards/auth.guard';\nimport { CadastrarAdminComponent } from './features/admin/pages/cadastrar-admin/cadastrar-admin.component'; // ajuste o caminho conforme seu projeto\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  redirectTo: '/auth/login',\n  pathMatch: 'full'\n}, {\n  // Módulo de Autenticação (Login)\n  path: 'auth',\n  loadChildren: () => import('./features/auth/auth.module').then(m => m.AuthModule)\n}, {\n  // Módulo de Admin (Clientes, Pets, etc.)\n  path: 'admin',\n  loadChildren: () => import('./features/admin/admin.module').then(m => m.AdminModule),\n  canActivate: [authGuard],\n  data: {\n    roles: ['ADMIN']\n  } // se quiser checar papel extra no guard\n}, {\n  // Módulo Cliente (Agendamentos)\n  path: 'cliente',\n  loadChildren: () => import('./features/cliente/cliente.module').then(m => m.ClienteModule),\n  canActivate: [authGuard],\n  data: {\n    roles: ['CLIENTE']\n  } // se quiser checar papel extra no guard\n}, {\n  // Tela para cadastro de admin\n  path: 'admin/cadastrar-admin',\n  component: CadastrarAdminComponent,\n  canActivate: [authGuard],\n  data: {\n    roles: ['ADMIN']\n  }\n}, {\n  // Rota curinga\n  path: '**',\n  redirectTo: '/auth/login'\n}];\nexport class AppRoutingModule {\n  static {\n    this.ɵfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forRoot(routes), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","authGuard","CadastrarAdminComponent","routes","path","redirectTo","pathMatch","loadChildren","then","m","AuthModule","AdminModule","canActivate","data","roles","ClienteModule","component","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["C:\\TCC\\petflow\\petflow-web\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { authGuard } from './core/guards/auth.guard';\r\nimport { CadastrarAdminComponent } from './features/admin/pages/cadastrar-admin/cadastrar-admin.component'; // ajuste o caminho conforme seu projeto\r\n\r\nconst routes: Routes = [\r\n{\r\npath: '',\r\nredirectTo: '/auth/login',\r\npathMatch: 'full'\r\n},\r\n{\r\n// Módulo de Autenticação (Login)\r\npath: 'auth',\r\nloadChildren: () => import('./features/auth/auth.module').then(m => m.AuthModule)\r\n  },\r\n  {\r\n    // Módulo de Admin (Clientes, Pets, etc.)\r\n    path: 'admin',\r\n    loadChildren: () => import('./features/admin/admin.module').then(m => m.AdminModule),\r\n    canActivate: [authGuard],\r\n    data: { roles: ['ADMIN'] } // se quiser checar papel extra no guard\r\n  },\r\n  {\r\n    // Módulo Cliente (Agendamentos)\r\n    path: 'cliente',\r\n    loadChildren: () => import('./features/cliente/cliente.module').then(m => m.ClienteModule),\r\n    canActivate: [authGuard],\r\n    data: { roles: ['CLIENTE'] } // se quiser checar papel extra no guard\r\n  },\r\n  {\r\n    // Tela para cadastro de admin\r\n    path: 'admin/cadastrar-admin',\r\n    component: CadastrarAdminComponent,\r\n    canActivate: [authGuard],\r\n    data: { roles: ['ADMIN'] }\r\n  },\r\n  {\r\n    // Rota curinga\r\n    path: '**',\r\n    redirectTo: '/auth/login'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,uBAAuB,QAAQ,kEAAkE,CAAC,CAAC;;;AAE5G,MAAMC,MAAM,GAAW,CACvB;EACAC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,aAAa;EACzBC,SAAS,EAAE;CACV,EACD;EACA;EACAF,IAAI,EAAE,MAAM;EACZG,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU;CAC7E,EACD;EACE;EACAN,IAAI,EAAE,OAAO;EACbG,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,+BAA+B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACE,WAAW,CAAC;EACpFC,WAAW,EAAE,CAACX,SAAS,CAAC;EACxBY,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAC,CAAE,CAAC;CAC5B,EACD;EACE;EACAV,IAAI,EAAE,SAAS;EACfG,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,mCAAmC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACM,aAAa,CAAC;EAC1FH,WAAW,EAAE,CAACX,SAAS,CAAC;EACxBY,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,SAAS;EAAC,CAAE,CAAC;CAC9B,EACD;EACE;EACAV,IAAI,EAAE,uBAAuB;EAC7BY,SAAS,EAAEd,uBAAuB;EAClCU,WAAW,EAAE,CAACX,SAAS,CAAC;EACxBY,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAC;CACzB,EACD;EACE;EACAV,IAAI,EAAE,IAAI;EACVC,UAAU,EAAE;CACb,CACF;AAMD,OAAM,MAAOY,gBAAgB;;;uBAAhBA,gBAAgB;IAAA;EAAA;;;YAAhBA;IAAgB;EAAA;;;gBAHjBjB,YAAY,CAACkB,OAAO,CAACf,MAAM,CAAC,EAC5BH,YAAY;IAAA;EAAA;;;2EAEXiB,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAApB,YAAA;IAAAqB,OAAA,GAFjBrB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}