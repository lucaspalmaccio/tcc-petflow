{"ast":null,"code":"// Imports do Calendário\nimport { CalendarView } from 'angular-calendar';\nimport { endOfMonth, startOfMonth, endOfWeek, startOfWeek } from 'date-fns';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../admin/services/agendamento.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"angular-calendar\";\nfunction AgendaComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" Carregando agendamentos... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AgendaComponent_mwl_calendar_month_view_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mwl-calendar-month-view\", 13);\n    i0.ɵɵlistener(\"dayClicked\", function AgendaComponent_mwl_calendar_month_view_24_Template_mwl_calendar_month_view_dayClicked_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      ctx_r4.setView(ctx_r4.CalendarView.Day);\n      return i0.ɵɵresetView(ctx_r4.viewDate = $event.day.date);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"viewDate\", ctx_r1.viewDate)(\"events\", ctx_r1.events)(\"refresh\", ctx_r1.refresh)(\"locale\", ctx_r1.locale);\n  }\n}\nfunction AgendaComponent_mwl_calendar_week_view_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mwl-calendar-week-view\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"viewDate\", ctx_r2.viewDate)(\"events\", ctx_r2.events)(\"refresh\", ctx_r2.refresh)(\"locale\", ctx_r2.locale);\n  }\n}\nfunction AgendaComponent_mwl_calendar_day_view_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mwl-calendar-day-view\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"viewDate\", ctx_r3.viewDate)(\"events\", ctx_r3.events)(\"refresh\", ctx_r3.refresh)(\"locale\", ctx_r3.locale);\n  }\n}\n// Cores para os status (Exemplo)\nconst colors = {\n  AGENDADO: {\n    primary: '#007bff',\n    secondary: '#D1E7FD'\n  },\n  CONCLUIDO: {\n    primary: '#198754',\n    secondary: '#D1FAD0'\n  },\n  CANCELADO: {\n    primary: '#6c757d',\n    secondary: '#E2E3E5'\n  }\n};\nlet AgendaComponent = /*#__PURE__*/(() => {\n  class AgendaComponent {\n    constructor(agendamentoService) {\n      this.agendamentoService = agendamentoService;\n      // --- Configuração do Calendário ---\n      this.view = CalendarView.Month; // Visão de Mês\n      this.CalendarView = CalendarView; // Para usar no HTML\n      this.viewDate = new Date(); // Data atual\n      this.locale = 'pt'; // Define o idioma para \"pt-BR\"\n      this.events = [];\n      this.isLoading = true;\n      this.refresh = new Subject();\n    }\n    ngOnInit() {\n      this.loadAgendamentos();\n    }\n    /**\n     * Carrega os agendamentos do back-end\n     * UC05 - Visão do Administrador (calendário)\n     */\n    loadAgendamentos() {\n      this.isLoading = true;\n      // Calcula o início e o fim do mês visível\n      const inicio = startOfWeek(startOfMonth(this.viewDate));\n      const fim = endOfWeek(endOfMonth(this.viewDate));\n      // Busca na API\n      this.agendamentoService.getAgendamentos(inicio.toISOString(), fim.toISOString()).subscribe(data => {\n        // Converte a resposta da API para o formato do Calendário\n        this.events = data.map(ag => {\n          return {\n            id: ag.id,\n            start: new Date(ag.dataHora),\n            title: `(${ag.status.substring(0, 3)}) ${ag.pet.nome} - ${ag.servicos.map(s => s.nome).join(', ')}`,\n            color: colors[ag.status] || colors.CANCELADO,\n            allDay: false // Eventos têm hora marcada\n          };\n        });\n        this.isLoading = false;\n        this.refresh.next(); // Atualiza a view do calendário\n      });\n    }\n    /**\n     * Chamado quando o usuário troca de mês ou dia.\n     */\n    onViewDateChange() {\n      this.loadAgendamentos();\n    }\n    /**\n     * Chamado quando o usuário troca a visão (Mês, Semana, Dia).\n     */\n    setView(view) {\n      this.view = view;\n    }\n    static {\n      this.ɵfac = function AgendaComponent_Factory(t) {\n        return new (t || AgendaComponent)(i0.ɵɵdirectiveInject(i1.AgendamentoService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AgendaComponent,\n        selectors: [[\"app-agenda\"]],\n        decls: 27,\n        vars: 21,\n        consts: [[1, \"list-container\"], [1, \"page-header\"], [1, \"calendar-header\"], [1, \"btn-group\"], [1, \"btn-secondary\", 3, \"click\"], [\"mwlCalendarPreviousView\", \"\", 1, \"btn-secondary\", 3, \"view\", \"viewDate\", \"viewDateChange\"], [\"mwlCalendarToday\", \"\", 1, \"btn-secondary\", 3, \"viewDate\", \"viewDateChange\"], [\"mwlCalendarNextView\", \"\", 1, \"btn-secondary\", 3, \"view\", \"viewDate\", \"viewDateChange\"], [\"class\", \"loading-indicator\", 4, \"ngIf\"], [1, \"calendar-container\", \"card\", 3, \"ngSwitch\"], [3, \"viewDate\", \"events\", \"refresh\", \"locale\", \"dayClicked\", 4, \"ngSwitchCase\"], [3, \"viewDate\", \"events\", \"refresh\", \"locale\", 4, \"ngSwitchCase\"], [1, \"loading-indicator\"], [3, \"viewDate\", \"events\", \"refresh\", \"locale\", \"dayClicked\"], [3, \"viewDate\", \"events\", \"refresh\", \"locale\"]],\n        template: function AgendaComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"header\", 1)(2, \"h1\");\n            i0.ɵɵtext(3, \"Agenda de Agendamentos\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"button\", 4);\n            i0.ɵɵlistener(\"click\", function AgendaComponent_Template_button_click_6_listener() {\n              return ctx.setView(ctx.CalendarView.Month);\n            });\n            i0.ɵɵtext(7, \" M\\u00EAs \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"button\", 4);\n            i0.ɵɵlistener(\"click\", function AgendaComponent_Template_button_click_8_listener() {\n              return ctx.setView(ctx.CalendarView.Week);\n            });\n            i0.ɵɵtext(9, \" Semana \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"button\", 4);\n            i0.ɵɵlistener(\"click\", function AgendaComponent_Template_button_click_10_listener() {\n              return ctx.setView(ctx.CalendarView.Day);\n            });\n            i0.ɵɵtext(11, \" Dia \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(12, \"div\", 3)(13, \"button\", 5);\n            i0.ɵɵlistener(\"viewDateChange\", function AgendaComponent_Template_button_viewDateChange_13_listener($event) {\n              return ctx.viewDate = $event;\n            })(\"viewDateChange\", function AgendaComponent_Template_button_viewDateChange_13_listener() {\n              return ctx.onViewDateChange();\n            });\n            i0.ɵɵtext(14, \" Anterior \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"button\", 6);\n            i0.ɵɵlistener(\"viewDateChange\", function AgendaComponent_Template_button_viewDateChange_15_listener($event) {\n              return ctx.viewDate = $event;\n            })(\"viewDateChange\", function AgendaComponent_Template_button_viewDateChange_15_listener() {\n              return ctx.onViewDateChange();\n            });\n            i0.ɵɵtext(16, \" Hoje \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"button\", 7);\n            i0.ɵɵlistener(\"viewDateChange\", function AgendaComponent_Template_button_viewDateChange_17_listener($event) {\n              return ctx.viewDate = $event;\n            })(\"viewDateChange\", function AgendaComponent_Template_button_viewDateChange_17_listener() {\n              return ctx.onViewDateChange();\n            });\n            i0.ɵɵtext(18, \" Pr\\u00F3ximo \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(19, \"h3\");\n            i0.ɵɵtext(20);\n            i0.ɵɵpipe(21, \"calendarDate\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(22, AgendaComponent_div_22_Template, 2, 0, \"div\", 8);\n            i0.ɵɵelementStart(23, \"div\", 9);\n            i0.ɵɵtemplate(24, AgendaComponent_mwl_calendar_month_view_24_Template, 1, 4, \"mwl-calendar-month-view\", 10);\n            i0.ɵɵtemplate(25, AgendaComponent_mwl_calendar_week_view_25_Template, 1, 4, \"mwl-calendar-week-view\", 11);\n            i0.ɵɵtemplate(26, AgendaComponent_mwl_calendar_day_view_26_Template, 1, 4, \"mwl-calendar-day-view\", 11);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵclassProp(\"active\", ctx.view === ctx.CalendarView.Month);\n            i0.ɵɵadvance(2);\n            i0.ɵɵclassProp(\"active\", ctx.view === ctx.CalendarView.Week);\n            i0.ɵɵadvance(2);\n            i0.ɵɵclassProp(\"active\", ctx.view === ctx.CalendarView.Day);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"view\", ctx.view)(\"viewDate\", ctx.viewDate);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"viewDate\", ctx.viewDate);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"view\", ctx.view)(\"viewDate\", ctx.viewDate);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(21, 17, ctx.viewDate, ctx.view + \"ViewTitle\", ctx.locale));\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitch\", ctx.view);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", ctx.CalendarView.Month);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", ctx.CalendarView.Week);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", ctx.CalendarView.Day);\n          }\n        },\n        dependencies: [i2.NgIf, i2.NgSwitch, i2.NgSwitchCase, i3.ɵCalendarPreviousViewDirective, i3.ɵCalendarNextViewDirective, i3.ɵCalendarTodayDirective, i3.CalendarMonthViewComponent, i3.CalendarWeekViewComponent, i3.CalendarDayViewComponent, i3.ɵCalendarDatePipe],\n        styles: [\".calendar-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:1.5rem;padding:1rem;background-color:var(--color-white);border-radius:8px;box-shadow:var(--shadow-sm)}.calendar-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;margin:0}.btn-group[_ngcontent-%COMP%]{display:flex;gap:.25rem}.btn-group[_ngcontent-%COMP%]   .btn-secondary[_ngcontent-%COMP%]{background-color:var(--color-light);color:var(--color-dark);border:1px solid var(--color-border);padding:8px 12px}.btn-group[_ngcontent-%COMP%]   .btn-secondary[_ngcontent-%COMP%]:hover{background-color:#e2e6ea}.btn-group[_ngcontent-%COMP%]   .btn-secondary.active[_ngcontent-%COMP%]{background-color:var(--color-primary);color:var(--color-white);border-color:var(--color-primary-dark)}.calendar-container.card[_ngcontent-%COMP%]{background-color:var(--color-white);border-radius:8px;box-shadow:var(--shadow-sm);padding:1rem}mwl-calendar-week-view[_ngcontent-%COMP%], mwl-calendar-day-view[_ngcontent-%COMP%]{display:block;height:600px}\"]\n      });\n    }\n  }\n  return AgendaComponent;\n})();\nexport { AgendaComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}