{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n/**\n* Guarda funcional para proteger as rotas do Cliente (Sprint 03).\n*/\nexport const clienteAuthGuard = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  // 1. O usuário está logado?\n  if (!authService.isAuthenticated()) {\n    // Não está logado, redireciona para o login\n    router.navigate(['/auth/login']);\n    return false;\n  }\n  // 2. O usuário é um CLIENTE?\n  // (Permitimos ADMIN também, caso ele precise acessar a visão do cliente)\n  const role = authService.getUserRole();\n  if (role === 'ROLE_CLIENTE' || role === 'ROLE_ADMIN') {\n    return true; // Permite acesso\n  }\n  // Se não for nenhum dos dois, nega o acesso.\n  console.error('Acesso negado. Requer ROLE_CLIENTE ou ROLE_ADMIN.');\n  authService.logout(); // Desloga o usuário\n  return false;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}