{"ast":null,"code":"import { environment } from '../../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ServicoService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/api/servicos`;\n  }\n  /**\n   * UC04 - Listar Serviços\n   */\n  getAllServicos() {\n    return this.http.get(this.apiUrl);\n  }\n  /**\n   * UC04 - Buscar Serviço por ID\n   */\n  getServicoById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  /**\n   * UC04 - Adicionar Serviço\n   */\n  createServico(servico) {\n    return this.http.post(this.apiUrl, servico);\n  }\n  /**\n   * UC04 - Editar Serviço\n   */\n  updateServico(id, servico) {\n    return this.http.put(`${this.apiUrl}/${id}`, servico);\n  }\n  /**\n   * UC04 - Excluir Serviço\n   */\n  deleteServico(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function ServicoService_Factory(t) {\n      return new (t || ServicoService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ServicoService,\n      factory: ServicoService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { ServicoService };","map":{"version":3,"names":["environment","ServicoService","constructor","http","apiUrl","getAllServicos","get","getServicoById","id","createServico","servico","post","updateServico","put","deleteServico","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\TCC\\petflow\\petflow-web\\src\\app\\features\\admin\\services\\servico.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Servico, ServicoDTO } from '../models/servico.model';\r\n\r\n@Injectable({\r\nprovidedIn: 'root'\r\n})\r\nexport class ServicoService {\r\n\r\nprivate apiUrl = `${environment.apiUrl}/api/servicos`;\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\n  /**\r\n   * UC04 - Listar Serviços\r\n   */\r\n  getAllServicos(): Observable<Servico[]> {\r\n    return this.http.get<Servico[]>(this.apiUrl);\r\n  }\r\n\r\n  /**\r\n   * UC04 - Buscar Serviço por ID\r\n   */\r\n  getServicoById(id: number): Observable<Servico> {\r\n    return this.http.get<Servico>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  /**\r\n   * UC04 - Adicionar Serviço\r\n   */\r\n  createServico(servico: ServicoDTO): Observable<Servico> {\r\n    return this.http.post<Servico>(this.apiUrl, servico);\r\n  }\r\n\r\n  /**\r\n   * UC04 - Editar Serviço\r\n   */\r\n  updateServico(id: number, servico: ServicoDTO): Observable<Servico> {\r\n    return this.http.put<Servico>(`${this.apiUrl}/${id}`, servico);\r\n  }\r\n\r\n  /**\r\n   * UC04 - Excluir Serviço\r\n   */\r\n  deleteServico(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n}"],"mappings":"AAGA,SAASA,WAAW,QAAQ,sCAAsC;;;AAGlE,MAGaC,cAAc;EAI3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,eAAe;EAEb;EAEtC;;;EAGAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC;EAC9C;EAEA;;;EAGAG,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;EAEA;;;EAGAC,aAAaA,CAACC,OAAmB;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAU,IAAI,CAACP,MAAM,EAAEM,OAAO,CAAC;EACtD;EAEA;;;EAGAE,aAAaA,CAACJ,EAAU,EAAEE,OAAmB;IAC3C,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAU,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,OAAO,CAAC;EAChE;EAEA;;;EAGAI,aAAaA,CAACN,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;;;uBAvCWP,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdlB,cAAc;MAAAmB,OAAA,EAAdnB,cAAc,CAAAoB,IAAA;MAAAC,UAAA,EAFf;IAAM;EAAA;;SAELrB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}