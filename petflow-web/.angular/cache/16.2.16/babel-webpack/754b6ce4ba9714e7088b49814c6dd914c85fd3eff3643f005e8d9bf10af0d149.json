{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n/**\n* Guarda funcional (moderno) para proteger as rotas de Admin.\n*/\nexport const adminAuthGuard = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  // 1. O usuário está logado?\n  if (!authService.isAuthenticated()) {\n    // Não está logado, redireciona para o login\n    router.navigate(['/auth/login']);\n    return false;\n  }\n  // 2. O usuário é um ADMIN?\n  if (authService.getUserRole() !== 'ROLE_ADMIN') {\n    // Está logado, mas não é admin.\n    // (Em um sistema maior, redirecionaria para a área do cliente)\n    // Por enquanto, apenas o mandamos de volta para o login.\n    console.error('Acesso negado. Requer ROLE_ADMIN.');\n    authService.logout(); // Desloga o usuário\n    return false;\n  }\n  // Se passou em ambas as verificações, permite o acesso.\n  return true;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}