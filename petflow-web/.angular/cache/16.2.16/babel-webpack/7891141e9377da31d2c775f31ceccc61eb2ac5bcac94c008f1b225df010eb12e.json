{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/cliente.service\";\nimport * as i3 from \"../../../services/pet.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../../components/pet-form-modal/pet-form-modal.component\";\nfunction ClienteFormComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1, \" E-mail \\u00E9 obrigat\\u00F3rio. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClienteFormComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1, \" E-mail inv\\u00E1lido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClienteFormComponent_div_17_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1, \" Senha \\u00E9 obrigat\\u00F3ria. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClienteFormComponent_div_17_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1, \" Senha deve ter no m\\u00EDnimo 6 caracteres. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClienteFormComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"label\", 26);\n    i0.ɵɵtext(2, \"Senha\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 27);\n    i0.ɵɵtemplate(4, ClienteFormComponent_div_17_div_4_Template, 2, 0, \"div\", 9);\n    i0.ɵɵtemplate(5, ClienteFormComponent_div_17_div_5_Template, 2, 0, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r2.clienteForm.get(\"senha\")) == null ? null : tmp_0_0.touched) && ((tmp_0_0 = ctx_r2.clienteForm.get(\"senha\")) == null ? null : tmp_0_0.hasError(\"required\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r2.clienteForm.get(\"senha\")) == null ? null : tmp_1_0.touched) && ((tmp_1_0 = ctx_r2.clienteForm.get(\"senha\")) == null ? null : tmp_1_0.hasError(\"minlength\")));\n  }\n}\nfunction ClienteFormComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.errorMessage, \" \");\n  }\n}\nfunction ClienteFormComponent_section_44_table_6_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 36)(8, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function ClienteFormComponent_section_44_table_6_tr_12_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const pet_r12 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r13.openPetModal(pet_r12));\n    });\n    i0.ɵɵtext(9, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function ClienteFormComponent_section_44_table_6_tr_12_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const pet_r12 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r15.onDeletePet(pet_r12));\n    });\n    i0.ɵɵtext(11, \"Excluir\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const pet_r12 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(pet_r12.nome);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(pet_r12.especie);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(pet_r12.raca);\n  }\n}\nfunction ClienteFormComponent_section_44_table_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 34)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Nome\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Esp\\u00E9cie\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Ra\\u00E7a\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"A\\u00E7\\u00F5es\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, ClienteFormComponent_section_44_table_6_tr_12_Template, 12, 3, \"tr\", 35);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.cliente.pets);\n  }\n}\nfunction ClienteFormComponent_section_44_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" Este cliente ainda n\\u00E3o possui pets cadastrados. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClienteFormComponent_section_44_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 29)(1, \"header\", 30)(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function ClienteFormComponent_section_44_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.openPetModal(null));\n    });\n    i0.ɵɵtext(5, \" + Adicionar Pet \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(6, ClienteFormComponent_section_44_table_6_Template, 13, 1, \"table\", 32);\n    i0.ɵɵtemplate(7, ClienteFormComponent_section_44_ng_template_7_Template, 2, 0, \"ng-template\", null, 33, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r9 = i0.ɵɵreference(8);\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Pets Cadastrados (\", ctx_r4.cliente.pets.length, \")\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.cliente.pets.length > 0)(\"ngIfElse\", _r9);\n  }\n}\nfunction ClienteFormComponent_app_pet_form_modal_45_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-pet-form-modal\", 40);\n    i0.ɵɵlistener(\"closeModal\", function ClienteFormComponent_app_pet_form_modal_45_Template_app_pet_form_modal_closeModal_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.closePetModal());\n    })(\"saveSuccess\", function ClienteFormComponent_app_pet_form_modal_45_Template_app_pet_form_modal_saveSuccess_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.handlePetSave());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"clienteId\", ctx_r5.clienteId)(\"pet\", ctx_r5.currentPetToEdit);\n  }\n}\nlet ClienteFormComponent = /*#__PURE__*/(() => {\n  class ClienteFormComponent {\n    constructor(fb, clienteService, petService, router, route // Para ler o :id da URL\n    ) {\n      this.fb = fb;\n      this.clienteService = clienteService;\n      this.petService = petService;\n      this.router = router;\n      this.route = route;\n      this.isEditMode = false;\n      this.isLoading = false;\n      this.errorMessage = null;\n      // --- Dados do Cliente e Pets ---\n      this.clienteId = null;\n      this.cliente = null; // Para listar os pets\n      // --- Estado do Modal de Pet ---\n      this.isPetModalOpen = false;\n      this.currentPetToEdit = null;\n      // UC02 [130] - Formulário com campos: Nome, CPF, Telefone, Endereço\n      // e dados de acesso (E-mail, Senha) [131]\n      this.clienteForm = this.fb.group({\n        nome: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        senha: ['', [Validators.required, Validators.minLength(6)]],\n        cpf: ['', [Validators.required]],\n        telefone: ['', Validators.required],\n        endereco: ['']\n      });\n    }\n    ngOnInit() {\n      // Verifica se há um 'id' nos parâmetros da rota\n      const idParam = this.route.snapshot.paramMap.get('id');\n      if (idParam) {\n        // MODO EDIÇÃO\n        this.isEditMode = true;\n        this.clienteId = +idParam; // Converte string para número\n        // UC02 [133c] - Sistema exibe os dados do cliente\n        this.loadClienteData();\n        // Em modo de edição, a senha não é obrigatória (nem deve ser alterada aqui)\n        this.clienteForm.get('senha')?.clearValidators();\n        this.clienteForm.get('senha')?.updateValueAndValidity();\n      }\n      // else: MODO CRIAÇÃO (formulário já está pronto)\n    }\n    /**\n     * Carrega os dados do cliente (usado no modo de edição).\n     */\n    loadClienteData() {\n      if (!this.clienteId) return;\n      this.isLoading = true;\n      this.clienteService.getClienteById(this.clienteId).subscribe({\n        next: cliente => {\n          this.isLoading = false;\n          this.cliente = cliente; // Armazena o cliente (para listar os pets)\n          // Preenche o formulário com os dados\n          this.clienteForm.patchValue({\n            nome: cliente.nome,\n            email: cliente.email,\n            cpf: cliente.cpf,\n            telefone: cliente.telefone,\n            endereco: cliente.endereco\n          });\n        },\n        error: err => {\n          this.isLoading = false;\n          this.errorMessage = \"Cliente não encontrado.\";\n          this.router.navigate(['/admin/clientes']);\n        }\n      });\n    }\n    /**\n     * Salva o Cliente (Criação ou Edição)\n     * UC02 [131] ou [134]\n     */\n    onSubmit() {\n      if (this.clienteForm.invalid) {\n        this.errorMessage = \"Por favor, corrija os erros no formulário.\";\n        return;\n      }\n      this.isLoading = true;\n      this.errorMessage = null;\n      const formValue = this.clienteForm.value;\n      const saveOperation = this.isEditMode ? this.clienteService.updateCliente(this.clienteId, {\n        nome: formValue.nome,\n        cpf: formValue.cpf,\n        telefone: formValue.telefone,\n        endereco: formValue.endereco\n      }) : this.clienteService.createCliente(formValue);\n      saveOperation.subscribe({\n        next: () => {\n          this.isLoading = false;\n          // (Adicionar Toast de sucesso)\n          this.router.navigate(['/admin/clientes']);\n        },\n        error: err => {\n          this.isLoading = false;\n          // UC02 [137] - Dados Inválidos/Duplicados\n          this.errorMessage = err.error?.erro || \"Erro ao salvar cliente. Verifique o CPF e E-mail.\";\n        }\n      });\n    }\n    // --- Funções de Controle do Modal de Pet (UC03) ---\n    /**\n     * UC03 [135] - Administrador seleciona \"Adicionar Pet\"\n     */\n    openPetModal(pet = null) {\n      this.currentPetToEdit = pet;\n      this.isPetModalOpen = true;\n    }\n    closePetModal() {\n      this.isPetModalOpen = false;\n      this.currentPetToEdit = null;\n    }\n    /**\n     * Chamado quando o modal de pet emite 'saveSuccess'.\n     * Recarrega os dados do cliente para exibir o pet novo/atualizado.\n     */\n    handlePetSave() {\n      this.loadClienteData(); // Recarrega o cliente e sua lista de pets\n    }\n    /**\n     * UC03 (Implícito) - Excluir Pet\n     */\n    onDeletePet(pet) {\n      if (confirm(`Tem certeza que deseja excluir o pet \"${pet.nome}\"?`)) {\n        this.petService.deletePet(pet.id).subscribe({\n          next: () => this.loadClienteData(),\n          error: err => alert(\"Erro ao excluir pet.\")\n        });\n      }\n    }\n    /**\n     * Navega de volta para a lista.\n     */\n    goBack() {\n      this.router.navigate(['/admin/clientes']);\n    }\n    static {\n      this.ɵfac = function ClienteFormComponent_Factory(t) {\n        return new (t || ClienteFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ClienteService), i0.ɵɵdirectiveInject(i3.PetService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ClienteFormComponent,\n        selectors: [[\"app-cliente-form\"]],\n        decls: 46,\n        vars: 11,\n        consts: [[1, \"form-container\"], [1, \"form-header\"], [1, \"btn-back\", 3, \"click\"], [1, \"card\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-section\"], [1, \"form-row\"], [1, \"form-group\"], [\"for\", \"email\", 1, \"form-label\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"readonly\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"class\", \"form-group\", 4, \"ngIf\"], [\"for\", \"nome\", 1, \"form-label\"], [\"id\", \"nome\", \"type\", \"text\", \"formControlName\", \"nome\", 1, \"form-control\"], [\"for\", \"cpf\", 1, \"form-label\"], [\"id\", \"cpf\", \"type\", \"text\", \"formControlName\", \"cpf\", 1, \"form-control\"], [\"for\", \"telefone\", 1, \"form-label\"], [\"id\", \"telefone\", \"type\", \"text\", \"formControlName\", \"telefone\", 1, \"form-control\"], [\"for\", \"endereco\", 1, \"form-label\"], [\"id\", \"endereco\", \"type\", \"text\", \"formControlName\", \"endereco\", 1, \"form-control\"], [1, \"form-actions\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn-primary\", 3, \"disabled\"], [\"class\", \"card pet-section\", 4, \"ngIf\"], [3, \"clienteId\", \"pet\", \"closeModal\", \"saveSuccess\", 4, \"ngIf\"], [1, \"text-danger\"], [\"for\", \"senha\", 1, \"form-label\"], [\"id\", \"senha\", \"type\", \"password\", \"formControlName\", \"senha\", 1, \"form-control\"], [1, \"error-message\"], [1, \"card\", \"pet-section\"], [1, \"page-header\"], [1, \"btn-primary\", 3, \"click\"], [\"class\", \"data-table\", 4, \"ngIf\", \"ngIfElse\"], [\"noPets\", \"\"], [1, \"data-table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"action-buttons\"], [1, \"btn-edit\", 3, \"click\"], [1, \"btn-delete\", 3, \"click\"], [1, \"no-data\"], [3, \"clienteId\", \"pet\", \"closeModal\", \"saveSuccess\"]],\n        template: function ClienteFormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"header\", 1)(2, \"button\", 2);\n            i0.ɵɵlistener(\"click\", function ClienteFormComponent_Template_button_click_2_listener() {\n              return ctx.goBack();\n            });\n            i0.ɵɵtext(3, \" \\u2190 Voltar para a Lista \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"h1\");\n            i0.ɵɵtext(5);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(6, \"form\", 3);\n            i0.ɵɵlistener(\"ngSubmit\", function ClienteFormComponent_Template_form_ngSubmit_6_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(7, \"fieldset\", 4)(8, \"legend\");\n            i0.ɵɵtext(9, \"Dados de Acesso\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"div\", 5)(11, \"div\", 6)(12, \"label\", 7);\n            i0.ɵɵtext(13, \"E-mail (Login)\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(14, \"input\", 8);\n            i0.ɵɵtemplate(15, ClienteFormComponent_div_15_Template, 2, 0, \"div\", 9);\n            i0.ɵɵtemplate(16, ClienteFormComponent_div_16_Template, 2, 0, \"div\", 9);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(17, ClienteFormComponent_div_17_Template, 6, 2, \"div\", 10);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(18, \"fieldset\", 4)(19, \"legend\");\n            i0.ɵɵtext(20, \"Dados Pessoais\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(21, \"div\", 6)(22, \"label\", 11);\n            i0.ɵɵtext(23, \"Nome Completo\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(24, \"input\", 12);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(25, \"div\", 5)(26, \"div\", 6)(27, \"label\", 13);\n            i0.ɵɵtext(28, \"CPF\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(29, \"input\", 14);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(30, \"div\", 6)(31, \"label\", 15);\n            i0.ɵɵtext(32, \"Telefone\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(33, \"input\", 16);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(34, \"div\", 6)(35, \"label\", 17);\n            i0.ɵɵtext(36, \"Endere\\u00E7o (Opcional)\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(37, \"input\", 18);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(38, \"footer\", 19);\n            i0.ɵɵtemplate(39, ClienteFormComponent_div_39_Template, 2, 1, \"div\", 20);\n            i0.ɵɵelementStart(40, \"button\", 21);\n            i0.ɵɵlistener(\"click\", function ClienteFormComponent_Template_button_click_40_listener() {\n              return ctx.goBack();\n            });\n            i0.ɵɵtext(41, \"Cancelar\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(42, \"button\", 22);\n            i0.ɵɵtext(43);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵtemplate(44, ClienteFormComponent_section_44_Template, 9, 3, \"section\", 23);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(45, ClienteFormComponent_app_pet_form_modal_45_Template, 1, 2, \"app-pet-form-modal\", 24);\n          }\n          if (rf & 2) {\n            let tmp_3_0;\n            let tmp_4_0;\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Editar Cliente\" : \"Novo Cliente\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"formGroup\", ctx.clienteForm);\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"readonly\", ctx.isEditMode);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.clienteForm.get(\"email\")) == null ? null : tmp_3_0.touched) && ((tmp_3_0 = ctx.clienteForm.get(\"email\")) == null ? null : tmp_3_0.hasError(\"required\")));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.clienteForm.get(\"email\")) == null ? null : tmp_4_0.touched) && ((tmp_4_0 = ctx.clienteForm.get(\"email\")) == null ? null : tmp_4_0.hasError(\"email\")));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.isEditMode);\n            i0.ɵɵadvance(22);\n            i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"disabled\", ctx.isLoading || ctx.clienteForm.invalid);\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate1(\" \", ctx.isLoading ? \"Salvando...\" : ctx.isEditMode ? \"Salvar Altera\\u00E7\\u00F5es\" : \"Cadastrar Cliente\", \" \");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.isEditMode && ctx.cliente);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.isPetModalOpen);\n          }\n        },\n        dependencies: [i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.PetFormModalComponent],\n        styles: [\".form-container[_ngcontent-%COMP%]{max-width:900px;margin:0 auto}.form-header[_ngcontent-%COMP%]{display:flex;align-items:center;gap:1.5rem;margin-bottom:1.5rem}.btn-back[_ngcontent-%COMP%]{background:none;border:none;color:var(--color-primary);font-weight:500}.btn-back[_ngcontent-%COMP%]:hover{text-decoration:underline}.form-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2rem;font-weight:600}.card[_ngcontent-%COMP%]{background-color:var(--color-white);border-radius:8px;box-shadow:var(--shadow-sm);padding:2rem}.form-section[_ngcontent-%COMP%]{border:none;padding:0;margin-bottom:2rem}.form-section[_ngcontent-%COMP%]   legend[_ngcontent-%COMP%]{font-size:1.2rem;font-weight:600;margin-bottom:1rem;padding-bottom:.5rem;border-bottom:1px solid var(--color-border);width:100%}.form-row[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr;gap:1.5rem}.form-actions[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;align-items:center;gap:1rem;border-top:1px solid var(--color-border);padding-top:1.5rem;margin-top:1.5rem}.error-message[_ngcontent-%COMP%]{color:var(--color-danger);margin-right:auto}.btn-secondary[_ngcontent-%COMP%]{background-color:var(--color-light);color:var(--color-dark);border:1px solid var(--color-border)}.pet-section[_ngcontent-%COMP%]{margin-top:2rem}.pet-section[_ngcontent-%COMP%]   .page-header[_ngcontent-%COMP%]{margin-bottom:1.5rem;padding-bottom:1rem;border-bottom:1px solid var(--color-border)}.pet-section[_ngcontent-%COMP%]   .page-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:1.5rem}.no-data[_ngcontent-%COMP%]{text-align:center;padding:1rem}\"]\n      });\n    }\n  }\n  return ClienteFormComponent;\n})();\nexport { ClienteFormComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}