{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet AgendamentoModalComponent = class AgendamentoModalComponent {\n  constructor(fb, agendamentoService, servicoService // Injetar para pegar os preços\n  ) {\n    this.fb = fb;\n    this.agendamentoService = agendamentoService;\n    this.servicoService = servicoService;\n    this.closeModal = new EventEmitter();\n    this.saveSuccess = new EventEmitter();\n    this.isLoading = false;\n    this.errorMessage = null;\n    // Correção: Adicionada propriedade valorTotal\n    this.valorTotal = 0;\n    this.servicosCache = []; // Cache para cálculo do valor\n    this.agendamentoForm = this.fb.group({\n      petId: [null, Validators.required],\n      dataHora: ['', Validators.required],\n      servicoIds: this.fb.array([], Validators.required) // Array de checkboxes\n    });\n  }\n  ngOnInit() {\n    // Carrega o cache de serviços para cálculo do preço\n    this.servicosDisponiveis$.subscribe(servicos => this.servicosCache = servicos);\n  }\n  get servicosFormArray() {\n    return this.agendamentoForm.get('servicoIds');\n  }\n  // Correção: Adicionada função onServicoChange\n  onServicoChange(event) {\n    const checkbox = event.target;\n    const servicoId = parseInt(checkbox.value, 10);\n    if (checkbox.checked) {\n      this.servicosFormArray.push(this.fb.control(servicoId));\n    } else {\n      const index = this.servicosFormArray.controls.findIndex(x => x.value === servicoId);\n      if (index !== -1) {\n        this.servicosFormArray.removeAt(index);\n      }\n    }\n    this.calcularValorTotal();\n  }\n  // Correção: Adicionada função calcularValorTotal\n  calcularValorTotal() {\n    this.valorTotal = this.servicosFormArray.value.reduce((total, servicoId) => {\n      const servico = this.servicosCache.find(s => s.id === servicoId);\n      return total + (servico?.preco || 0);\n    }, 0);\n  }\n  /**\n   * Envia o formulário para criar o agendamento\n   * UC05 - Fluxo Principal [150] a [152]\n   */\n  submitForm() {\n    if (this.agendamentoForm.invalid || this.servicosFormArray.length === 0) {\n      this.errorMessage = \"Selecione o pet, a data/hora e pelo menos um serviço.\";\n      return;\n    }\n    this.isLoading = true;\n    this.errorMessage = null;\n    const formValue = this.agendamentoForm.value;\n    // Ajusta o formato da data/hora para ISO String (YYYY-MM-DDTHH:mm:ss)\n    const dataHoraISO = new Date(formValue.dataHora).toISOString().slice(0, 19);\n    const dto = {\n      clienteId: null,\n      petId: formValue.petId,\n      dataHora: dataHoraISO,\n      servicoIds: formValue.servicoIds\n    };\n    this.agendamentoService.createAgendamento(dto).subscribe({\n      next: () => {\n        this.isLoading = false;\n        this.saveSuccess.emit();\n        this.onClose();\n      },\n      error: err => {\n        this.isLoading = false;\n        // UC05 - Fluxo de Exceção [153] (Horário Indisponível)\n        this.errorMessage = err.error?.erro || \"Erro ao criar agendamento. Verifique a data/hora.\";\n        console.error(\"Erro ao criar agendamento:\", err);\n      }\n    });\n  }\n  /**\n   * Emite o evento para fechar o modal.\n   */\n  onClose() {\n    this.closeModal.emit();\n  }\n};\n__decorate([Input()], AgendamentoModalComponent.prototype, \"petsCliente$\", void 0);\n__decorate([Input()], AgendamentoModalComponent.prototype, \"servicosDisponiveis$\", void 0);\n__decorate([Output()], AgendamentoModalComponent.prototype, \"closeModal\", void 0);\n__decorate([Output()], AgendamentoModalComponent.prototype, \"saveSuccess\", void 0);\nAgendamentoModalComponent = __decorate([Component({\n  selector: 'app-agendamento-modal',\n  templateUrl: './agendamento-modal.component.html',\n  styleUrls: ['./agendamento-modal.component.css']\n})], AgendamentoModalComponent);\nexport { AgendamentoModalComponent };","map":{"version":3,"names":["Component","EventEmitter","Input","Output","Validators","AgendamentoModalComponent","constructor","fb","agendamentoService","servicoService","closeModal","saveSuccess","isLoading","errorMessage","valorTotal","servicosCache","agendamentoForm","group","petId","required","dataHora","servicoIds","array","ngOnInit","servicosDisponiveis$","subscribe","servicos","servicosFormArray","get","onServicoChange","event","checkbox","target","servicoId","parseInt","value","checked","push","control","index","controls","findIndex","x","removeAt","calcularValorTotal","reduce","total","servico","find","s","id","preco","submitForm","invalid","length","formValue","dataHoraISO","Date","toISOString","slice","dto","clienteId","createAgendamento","next","emit","onClose","error","err","erro","console","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\TCC\\petflow\\petflow-web\\src\\app\\features\\cliente\\components\\agendamento-modal\\agendamento-modal.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport { Observable, catchError, of } from 'rxjs';\r\nimport { Pet } from '../../../admin/models/pet.model';\r\nimport { Servico } from '../../../admin/models/servico.model';\r\nimport { AgendamentoService } from '../../../admin/services/agendamento.service';\r\nimport { AgendamentoRequestDTO } from '../../../admin/models/agendamento.model';\r\n\r\n@Component({\r\nselector: 'app-agendamento-modal',\r\ntemplateUrl: './agendamento-modal.component.html',\r\nstyleUrls: ['./agendamento-modal.component.css']\r\n})\r\nexport class AgendamentoModalComponent implements OnInit {\r\n\r\n// Dados recebidos do componente pai\r\n// Correção: Adicionado '!'\r\n@Input() petsCliente$!: Observable<Pet[]>;\r\n// Correção: Adicionado '!'\r\n@Input() servicosDisponiveis$!: Observable<Servico[]>;\r\n@Output() closeModal = new EventEmitter<void>();\r\n@Output() saveSuccess = new EventEmitter<void>();\r\n\r\n// Estado do componente\r\nagendamentoForm: FormGroup;\r\nisLoading = false;\r\nerrorMessage: string | null = null;\r\n// Correção: Adicionada propriedade valorTotal\r\npublic valorTotal = 0;\r\nprivate servicosCache: Servico[] = []; // Cache para cálculo do valor\r\n\r\nconstructor(\r\n    private fb: FormBuilder,\r\n    private agendamentoService: AgendamentoService,\r\n    private servicoService: ServicoService // Injetar para pegar os preços\r\n  ) {\r\n    this.agendamentoForm = this.fb.group({\r\n      petId: [null, Validators.required],\r\n      dataHora: ['', Validators.required],\r\n      servicoIds: this.fb.array([], Validators.required) // Array de checkboxes\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n     // Carrega o cache de serviços para cálculo do preço\r\n     this.servicosDisponiveis$.subscribe(servicos => this.servicosCache = servicos);\r\n  }\r\n\r\n  get servicosFormArray(): FormArray {\r\n    return this.agendamentoForm.get('servicoIds') as FormArray;\r\n  }\r\n\r\n  // Correção: Adicionada função onServicoChange\r\n  onServicoChange(event: Event): void {\r\n    const checkbox = event.target as HTMLInputElement;\r\n    const servicoId = parseInt(checkbox.value, 10);\r\n\r\n    if (checkbox.checked) {\r\n      this.servicosFormArray.push(this.fb.control(servicoId));\r\n    } else {\r\n      const index = this.servicosFormArray.controls.findIndex(x => x.value === servicoId);\r\n      if (index !== -1) {\r\n        this.servicosFormArray.removeAt(index);\r\n      }\r\n    }\r\n    this.calcularValorTotal();\r\n  }\r\n\r\n  // Correção: Adicionada função calcularValorTotal\r\n  calcularValorTotal(): void {\r\n    this.valorTotal = this.servicosFormArray.value.reduce((total: number, servicoId: number) => {\r\n      const servico = this.servicosCache.find(s => s.id === servicoId);\r\n      return total + (servico?.preco || 0);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * Envia o formulário para criar o agendamento\r\n   * UC05 - Fluxo Principal [150] a [152]\r\n   */\r\n  submitForm(): void {\r\n    if (this.agendamentoForm.invalid || this.servicosFormArray.length === 0) {\r\n      this.errorMessage = \"Selecione o pet, a data/hora e pelo menos um serviço.\";\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    this.errorMessage = null;\r\n\r\n    const formValue = this.agendamentoForm.value;\r\n\r\n    // Ajusta o formato da data/hora para ISO String (YYYY-MM-DDTHH:mm:ss)\r\n    const dataHoraISO = new Date(formValue.dataHora).toISOString().slice(0, 19);\r\n\r\n    const dto: AgendamentoRequestDTO = {\r\n      clienteId: null, // O back-end pega do token do cliente\r\n      petId: formValue.petId,\r\n      dataHora: dataHoraISO,\r\n      servicoIds: formValue.servicoIds\r\n    };\r\n\r\n    this.agendamentoService.createAgendamento(dto).subscribe({\r\n      next: () => {\r\n        this.isLoading = false;\r\n        this.saveSuccess.emit();\r\n        this.onClose();\r\n      },\r\n      error: (err) => {\r\n        this.isLoading = false;\r\n        // UC05 - Fluxo de Exceção [153] (Horário Indisponível)\r\n        this.errorMessage = err.error?.erro || \"Erro ao criar agendamento. Verifique a data/hora.\";\r\n        console.error(\"Erro ao criar agendamento:\", err);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Emite o evento para fechar o modal.\r\n   */\r\n  onClose(): void {\r\n    this.closeModal.emit();\r\n  }\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}