{"ast":null,"code":"import { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nlet AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor(authService) {\n      this.authService = authService;\n    }\n    intercept(request, next) {\n      const token = this.authService.getToken();\n      const isApiUrl = request.url.startsWith(environment.apiUrl);\n      // Se o token existe e a requisição é para a nossa API...\n      if (token && isApiUrl) {\n        // Clona a requisição e adiciona o cabeçalho de autorização\n        request = request.clone({\n          setHeaders: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n      return next.handle(request);\n    }\n    static {\n      this.ɵfac = function AuthInterceptor_Factory(t) {\n        return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthInterceptor,\n        factory: AuthInterceptor.ɵfac\n      });\n    }\n  }\n  return AuthInterceptor;\n})();\nexport { AuthInterceptor };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}