{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    if (!this.authService.isAuthenticated()) {\n      // Se não estiver logado, redireciona para a tela de login\n      this.router.navigate(['/auth/login']);\n      return false;\n    }\n    // Usuário autenticado, deixa passar\n    return true;\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthGuard","constructor","authService","router","canActivate","isAuthenticated","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\TCC\\petflow\\petflow-web\\src\\app\\core\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\nprovidedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\nconstructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (!this.authService.isAuthenticated()) {\r\n      // Se não estiver logado, redireciona para a tela de login\r\n      this.router.navigate(['/auth/login']);\r\n      return false;\r\n    }\r\n\r\n    // Usuário autenticado, deixa passar\r\n    return true;\r\n  }\r\n}\r\n"],"mappings":";;;AAOA,OAAM,MAAOA,SAAS;EAEtBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAErEC,WAAWA,CAAA;IACT,IAAI,CAAC,IAAI,CAACF,WAAW,CAACG,eAAe,EAAE,EAAE;MACvC;MACA,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;MACrC,OAAO,KAAK;;IAGd;IACA,OAAO,IAAI;EACb;;;uBAbWN,SAAS,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAATZ,SAAS;MAAAa,OAAA,EAATb,SAAS,CAAAc,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}