{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/pet.service\";\nimport * as i3 from \"@angular/common\";\nfunction PetFormModalComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nlet PetFormModalComponent = /*#__PURE__*/(() => {\n  class PetFormModalComponent {\n    constructor(fb, petService) {\n      this.fb = fb;\n      this.petService = petService;\n      // --- Entradas e Saídas ---\n      this.clienteId = null; // ID do dono do pet\n      this.pet = null; // Pet (se for edição)\n      this.closeModal = new EventEmitter();\n      this.saveSuccess = new EventEmitter(); // Avisa o pai que salvou\n      this.isEditMode = false;\n      this.isLoading = false;\n      this.errorMessage = null;\n      this.petForm = this.fb.group({\n        nome: ['', Validators.required],\n        especie: ['', Validators.required],\n        raca: ['', Validators.required]\n      });\n    }\n    /**\n     * Detecta quando o @Input 'pet' muda (ao abrir o modal para edição).\n     */\n    ngOnChanges(changes) {\n      if (changes['pet'] && this.pet) {\n        // Modo Edição\n        this.isEditMode = true;\n        this.petForm.patchValue(this.pet);\n      } else {\n        // Modo Criação\n        this.isEditMode = false;\n        this.petForm.reset();\n      }\n    }\n    /**\n     * Salva o Pet (Criação ou Edição)\n     * UC03 - Fluxo \"Adicionar Pet\" ou \"Editar Pet\"\n     */\n    submitForm() {\n      if (this.petForm.invalid || !this.clienteId) {\n        this.errorMessage = \"Todos os campos são obrigatórios.\";\n        return;\n      }\n      this.isLoading = true;\n      this.errorMessage = null;\n      const petData = {\n        ...this.petForm.value,\n        clienteId: this.clienteId\n      };\n      const saveOperation = this.isEditMode && this.pet ? this.petService.updatePet(this.pet.id, petData) : this.petService.createPet(petData);\n      saveOperation.subscribe({\n        next: () => {\n          this.isLoading = false;\n          this.saveSuccess.emit(); // Emite o evento de sucesso\n          this.onClose(); // Fecha o modal\n        },\n        error: err => {\n          this.isLoading = false;\n          this.errorMessage = err.error?.erro || \"Erro ao salvar o pet.\";\n        }\n      });\n    }\n    /**\n     * Emite o evento para fechar o modal.\n     */\n    onClose() {\n      this.closeModal.emit();\n    }\n    static {\n      this.ɵfac = function PetFormModalComponent_Factory(t) {\n        return new (t || PetFormModalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PetService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: PetFormModalComponent,\n        selectors: [[\"app-pet-form-modal\"]],\n        inputs: {\n          clienteId: \"clienteId\",\n          pet: \"pet\"\n        },\n        outputs: {\n          closeModal: \"closeModal\",\n          saveSuccess: \"saveSuccess\"\n        },\n        features: [i0.ɵɵNgOnChangesFeature],\n        decls: 27,\n        vars: 5,\n        consts: [[1, \"modal-overlay\", 3, \"click\"], [1, \"modal-container\"], [1, \"modal-header\"], [1, \"btn-close\", 3, \"click\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"modal-body\"], [1, \"form-group\"], [\"for\", \"pet-nome\", 1, \"form-label\"], [\"id\", \"pet-nome\", \"type\", \"text\", \"formControlName\", \"nome\", 1, \"form-control\"], [\"for\", \"pet-especie\", 1, \"form-label\"], [\"id\", \"pet-especie\", \"type\", \"text\", \"formControlName\", \"especie\", 1, \"form-control\"], [\"for\", \"pet-raca\", 1, \"form-label\"], [\"id\", \"pet-raca\", \"type\", \"text\", \"formControlName\", \"raca\", 1, \"form-control\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn-primary\", 3, \"disabled\"], [1, \"error-message\"]],\n        template: function PetFormModalComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵlistener(\"click\", function PetFormModalComponent_Template_div_click_0_listener() {\n              return ctx.onClose();\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(1, \"div\", 1)(2, \"header\", 2)(3, \"h2\");\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"button\", 3);\n            i0.ɵɵlistener(\"click\", function PetFormModalComponent_Template_button_click_5_listener() {\n              return ctx.onClose();\n            });\n            i0.ɵɵtext(6, \"\\u00D7\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(7, \"form\", 4);\n            i0.ɵɵlistener(\"ngSubmit\", function PetFormModalComponent_Template_form_ngSubmit_7_listener() {\n              return ctx.submitForm();\n            });\n            i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 6)(10, \"label\", 7);\n            i0.ɵɵtext(11, \"Nome do Pet\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(12, \"input\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"div\", 6)(14, \"label\", 9);\n            i0.ɵɵtext(15, \"Esp\\u00E9cie (ex: Cachorro, Gato)\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(16, \"input\", 10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"div\", 6)(18, \"label\", 11);\n            i0.ɵɵtext(19, \"Ra\\u00E7a (ex: SRD, Poodle)\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(20, \"input\", 12);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(21, PetFormModalComponent_div_21_Template, 2, 1, \"div\", 13);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(22, \"footer\", 14)(23, \"button\", 15);\n            i0.ɵɵlistener(\"click\", function PetFormModalComponent_Template_button_click_23_listener() {\n              return ctx.onClose();\n            });\n            i0.ɵɵtext(24, \" Cancelar \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(25, \"button\", 16);\n            i0.ɵɵtext(26);\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Editar Pet\" : \"Adicionar Novo Pet\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.petForm);\n            i0.ɵɵadvance(14);\n            i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"disabled\", ctx.isLoading || ctx.petForm.invalid);\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate1(\" \", ctx.isLoading ? \"Salvando...\" : \"Salvar Pet\", \" \");\n          }\n        },\n        dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\".modal-overlay[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100vw;height:100vh;background-color:#00000080;z-index:1000}.modal-container[_ngcontent-%COMP%]{position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);width:100%;max-width:500px;background-color:var(--color-white);border-radius:8px;box-shadow:var(--shadow-md);z-index:1001;display:flex;flex-direction:column}.modal-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;padding:1rem 1.5rem;border-bottom:1px solid var(--color-border)}.modal-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:1.25rem;font-weight:600}.btn-close[_ngcontent-%COMP%]{background:none;border:none;font-size:1.5rem;color:var(--color-secondary)}.modal-body[_ngcontent-%COMP%]{padding:1.5rem}.modal-footer[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;gap:.5rem;padding:1rem 1.5rem;border-top:1px solid var(--color-border)}.btn-secondary[_ngcontent-%COMP%]{background-color:var(--color-light);color:var(--color-dark);border:1px solid var(--color-border)}.btn-secondary[_ngcontent-%COMP%]:hover{background-color:#e2e6ea}.error-message[_ngcontent-%COMP%]{color:var(--color-danger);margin-top:1rem}\"]\n      });\n    }\n  }\n  return PetFormModalComponent;\n})();\nexport { PetFormModalComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}