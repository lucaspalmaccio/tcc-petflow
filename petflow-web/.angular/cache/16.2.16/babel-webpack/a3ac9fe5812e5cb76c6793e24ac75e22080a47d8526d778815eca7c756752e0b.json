{"ast":null,"code":"import { tap, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/auth'; // seu backend\n  }\n  login(email, senha) {\n    return this.http.post(`${this.apiUrl}/login`, {\n      email,\n      senha\n    }).pipe(tap(response => {\n      if (!response.userRole) {\n        throw new Error('Usuário ou senha inválidos');\n      }\n      this.setSession(response);\n      // Redireciona conforme o perfil\n      if (response.userRole === 'ROLE_ADMIN') {\n        this.router.navigate(['/admin/clientes']);\n      } else if (response.userRole === 'ROLE_CLIENTE') {\n        this.router.navigate(['/cliente/home']);\n      }\n    }), catchError(err => {\n      console.error('Erro no login', err);\n      return throwError(() => new Error('Usuário ou senha inválidos'));\n    }));\n  }\n  setSession(authResponse) {\n    localStorage.setItem('petflow_auth_token', authResponse.token ?? '');\n    localStorage.setItem('petflow_user_role', authResponse.userRole ?? '');\n    localStorage.setItem('petflow_user_name', authResponse.userName ?? '');\n    if (authResponse.expiresIn) {\n      localStorage.setItem('petflow_token_expires', authResponse.expiresIn.toString());\n    }\n  }\n  logout() {\n    localStorage.clear();\n    this.router.navigate(['/auth/login']);\n  }\n  getToken() {\n    return localStorage.getItem('petflow_auth_token');\n  }\n  getUserRole() {\n    return localStorage.getItem('petflow_user_role');\n  }\n  getUserName() {\n    return localStorage.getItem('petflow_user_name');\n  }\n  isAuthenticated() {\n    const token = this.getToken();\n    const expires = localStorage.getItem('petflow_token_expires');\n    if (!token) return false;\n    if (expires && Date.now() > Number(expires)) return false;\n    return true;\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["tap","throwError","catchError","AuthService","constructor","router","http","apiUrl","login","email","senha","post","pipe","response","userRole","Error","setSession","navigate","err","console","error","authResponse","localStorage","setItem","token","userName","expiresIn","toString","logout","clear","getToken","getItem","getUserRole","getUserName","isAuthenticated","expires","Date","now","Number","i0","ɵɵinject","i1","Router","i2","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\TCC\\petflow\\petflow-web\\src\\app\\core\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, tap, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nexport interface LoginResponse {\r\ntoken: string | null;\r\nexpiresIn: number | null;\r\nuserName: string | null;\r\nuserRole: 'ROLE_ADMIN' | 'ROLE_CLIENTE' | null;\r\n}\r\n\r\n@Injectable({\r\nprovidedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\nprivate apiUrl = 'http://localhost:8080/auth'; // seu backend\r\n\r\nconstructor(private router: Router, private http: HttpClient) {}\r\n\r\n  login(email: string, senha: string): Observable<LoginResponse> {\r\n    return this.http.post<LoginResponse>(`${this.apiUrl}/login`, { email, senha })\r\n      .pipe(\r\n        tap(response => {\r\n          if (!response.userRole) {\r\n            throw new Error('Usuário ou senha inválidos');\r\n          }\r\n          this.setSession(response);\r\n\r\n          // Redireciona conforme o perfil\r\n          if (response.userRole === 'ROLE_ADMIN') {\r\n            this.router.navigate(['/admin/clientes']);\r\n          } else if (response.userRole === 'ROLE_CLIENTE') {\r\n            this.router.navigate(['/cliente/home']);\r\n          }\r\n        }),\r\n        catchError(err => {\r\n          console.error('Erro no login', err);\r\n          return throwError(() => new Error('Usuário ou senha inválidos'));\r\n        })\r\n      );\r\n  }\r\n\r\n  private setSession(authResponse: LoginResponse): void {\r\n    localStorage.setItem('petflow_auth_token', authResponse.token ?? '');\r\n    localStorage.setItem('petflow_user_role', authResponse.userRole ?? '');\r\n    localStorage.setItem('petflow_user_name', authResponse.userName ?? '');\r\n    if (authResponse.expiresIn) {\r\n      localStorage.setItem('petflow_token_expires', authResponse.expiresIn.toString());\r\n    }\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.clear();\r\n    this.router.navigate(['/auth/login']);\r\n  }\r\n\r\n  getToken(): string | null {\r\n    return localStorage.getItem('petflow_auth_token');\r\n  }\r\n\r\n  getUserRole(): string | null {\r\n    return localStorage.getItem('petflow_user_role');\r\n  }\r\n\r\n  getUserName(): string | null {\r\n    return localStorage.getItem('petflow_user_name');\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    const token = this.getToken();\r\n    const expires = localStorage.getItem('petflow_token_expires');\r\n    if (!token) return false;\r\n    if (expires && Date.now() > Number(expires)) return false;\r\n    return true;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}