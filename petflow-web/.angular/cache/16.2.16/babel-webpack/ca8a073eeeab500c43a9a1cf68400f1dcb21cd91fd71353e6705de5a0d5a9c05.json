{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { environment } from '../../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nclass CadastrarAdminComponent {\n  constructor(fb, http) {\n    this.fb = fb;\n    this.http = http;\n    this.form = this.fb.group({\n      nome: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      senha: ['', Validators.required]\n    });\n  }\n  cadastrar() {\n    if (this.form.invalid) return;\n    const body = {\n      ...this.form.value,\n      perfil: 'ADMIN'\n    };\n    this.http.post(`${environment.apiUrl}/admin/cadastrar`, body).subscribe({\n      next: () => alert('Administrador cadastrado com sucesso!'),\n      error: err => alert('Erro: ' + (err.error || 'Não foi possível cadastrar.'))\n    });\n  }\n  static {\n    this.ɵfac = function CadastrarAdminComponent_Factory(t) {\n      return new (t || CadastrarAdminComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CadastrarAdminComponent,\n      selectors: [[\"app-cadastrar-admin\"]],\n      decls: 15,\n      vars: 2,\n      consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"nome\", \"type\", \"text\"], [\"formControlName\", \"email\", \"type\", \"email\"], [\"formControlName\", \"senha\", \"type\", \"password\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function CadastrarAdminComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Cadastrar Novo Administrador\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function CadastrarAdminComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.cadastrar();\n          });\n          i0.ɵɵelementStart(4, \"label\");\n          i0.ɵɵtext(5, \"Nome:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"input\", 2);\n          i0.ɵɵelementStart(7, \"label\");\n          i0.ɵɵtext(8, \"Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 3);\n          i0.ɵɵelementStart(10, \"label\");\n          i0.ɵɵtext(11, \"Senha:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 4);\n          i0.ɵɵelementStart(13, \"button\", 5);\n          i0.ɵɵtext(14, \"Cadastrar\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n}\nexport { CadastrarAdminComponent };","map":{"version":3,"names":["Validators","environment","CadastrarAdminComponent","constructor","fb","http","form","group","nome","required","email","senha","cadastrar","invalid","body","value","perfil","post","apiUrl","subscribe","next","alert","error","err","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","selectors","decls","vars","consts","template","CadastrarAdminComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CadastrarAdminComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\TCC\\petflow\\petflow-web\\src\\app\\features\\admin\\pages\\cadastrar-admin\\cadastrar-admin.component.ts","C:\\TCC\\petflow\\petflow-web\\src\\app\\features\\admin\\pages\\cadastrar-admin\\cadastrar-admin.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Component({\r\nselector: 'app-cadastrar-admin',\r\ntemplateUrl: './cadastrar-admin.component.html',\r\n})\r\nexport class CadastrarAdminComponent {\r\nform = this.fb.group({\r\nnome: ['', Validators.required],\r\nemail: ['', [Validators.required, Validators.email]],\r\nsenha: ['', Validators.required],\r\n});\r\n\r\nconstructor(private fb: FormBuilder, private http: HttpClient) {}\r\n\r\n  cadastrar() {\r\n    if (this.form.invalid) return;\r\n\r\n    const body = { ...this.form.value, perfil: 'ADMIN' };\r\n    this.http.post(`${environment.apiUrl}/admin/cadastrar`, body)\r\n      .subscribe({\r\n        next: () => alert('Administrador cadastrado com sucesso!'),\r\n        error: err => alert('Erro: ' + (err.error || 'Não foi possível cadastrar.'))\r\n      });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h2>Cadastrar Novo Administrador</h2>\r\n\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"cadastrar()\">\r\n        <label>Nome:</label>\r\n        <input formControlName=\"nome\" type=\"text\" />\r\n\r\n        <label>Email:</label>\r\n        <input formControlName=\"email\" type=\"email\" />\r\n\r\n        <label>Senha:</label>\r\n        <input formControlName=\"senha\" type=\"password\" />\r\n\r\n        <button type=\"submit\" [disabled]=\"form.invalid\">Cadastrar</button>\r\n    </form>\r\n</div>\r\n"],"mappings":"AACA,SAAsBA,UAAU,QAAQ,gBAAgB;AAExD,SAASC,WAAW,QAAQ,sCAAsC;;;;AAElE,MAIaC,uBAAuB;EAOpCC,YAAoBC,EAAe,EAAUC,IAAgB;IAAzC,KAAAD,EAAE,GAAFA,EAAE;IAAuB,KAAAC,IAAI,GAAJA,IAAI;IANjD,KAAAC,IAAI,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MACrBC,IAAI,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,KAAK,CAAC,CAAC;MACpDC,KAAK,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACS,QAAQ;KAC9B,CAAC;EAE8D;EAE9DG,SAASA,CAAA;IACP,IAAI,IAAI,CAACN,IAAI,CAACO,OAAO,EAAE;IAEvB,MAAMC,IAAI,GAAG;MAAE,GAAG,IAAI,CAACR,IAAI,CAACS,KAAK;MAAEC,MAAM,EAAE;IAAO,CAAE;IACpD,IAAI,CAACX,IAAI,CAACY,IAAI,CAAC,GAAGhB,WAAW,CAACiB,MAAM,kBAAkB,EAAEJ,IAAI,CAAC,CAC1DK,SAAS,CAAC;MACTC,IAAI,EAAEA,CAAA,KAAMC,KAAK,CAAC,uCAAuC,CAAC;MAC1DC,KAAK,EAAEC,GAAG,IAAIF,KAAK,CAAC,QAAQ,IAAIE,GAAG,CAACD,KAAK,IAAI,6BAA6B,CAAC;KAC5E,CAAC;EACN;;;uBAlBWpB,uBAAuB,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA;IAAA;EAAA;;;YAAvB3B,uBAAuB;MAAA4B,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCTpCZ,EAAA,CAAAc,cAAA,aAAuB;UACfd,EAAA,CAAAe,MAAA,mCAA4B;UAAAf,EAAA,CAAAgB,YAAA,EAAK;UAErChB,EAAA,CAAAc,cAAA,cAAkD;UAAzBd,EAAA,CAAAiB,UAAA,sBAAAC,0DAAA;YAAA,OAAYL,GAAA,CAAAzB,SAAA,EAAW;UAAA,EAAC;UAC7CY,EAAA,CAAAc,cAAA,YAAO;UAAAd,EAAA,CAAAe,MAAA,YAAK;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UACpBhB,EAAA,CAAAmB,SAAA,eAA4C;UAE5CnB,EAAA,CAAAc,cAAA,YAAO;UAAAd,EAAA,CAAAe,MAAA,aAAM;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UACrBhB,EAAA,CAAAmB,SAAA,eAA8C;UAE9CnB,EAAA,CAAAc,cAAA,aAAO;UAAAd,EAAA,CAAAe,MAAA,cAAM;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UACrBhB,EAAA,CAAAmB,SAAA,gBAAiD;UAEjDnB,EAAA,CAAAc,cAAA,iBAAgD;UAAAd,EAAA,CAAAe,MAAA,iBAAS;UAAAf,EAAA,CAAAgB,YAAA,EAAS;;;UAVhEhB,EAAA,CAAAoB,SAAA,GAAkB;UAAlBpB,EAAA,CAAAqB,UAAA,cAAAR,GAAA,CAAA/B,IAAA,CAAkB;UAUEkB,EAAA,CAAAoB,SAAA,IAAyB;UAAzBpB,EAAA,CAAAqB,UAAA,aAAAR,GAAA,CAAA/B,IAAA,CAAAO,OAAA,CAAyB;;;;;;;SDJ1CX,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}