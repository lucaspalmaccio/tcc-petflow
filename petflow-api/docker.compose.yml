version: '3.8'

services:

  # Serviço 1: Banco de Dados PostgreSQL
  db:
    image: postgres:15
    container_name: petflow-db
    ports:
      - "5432:5432" # Expõe a porta do banco para o host (opcional, bom para debug)
    environment:
      # Cria o banco 'petflow' (conforme application.properties)
      - POSTGRES_DB=petflow_db
      # Credenciais que você forneceu
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Andressa@55
    volumes:
      # Garante que os dados do banco persistam ao reiniciar o container
      - petflow-data:/var/lib/postgresql/data

  # Serviço 2: API Back-end (Spring Boot)
  api:
    container_name: petflow-api
    # Constrói a imagem usando o Dockerfile no diretório atual ('.')
    build: .
    ports:
      - "8080:8080" # Expõe a porta da API
    # Garante que a API só inicie DEPOIS que o banco de dados estiver pronto
    depends_on:
      - db
    environment:
      # Configuração para a API se conectar ao container 'db'
      # ATENÇÃO: Usamos 'db' (nome do serviço) em vez de 'localhost'
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/petflow_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Andressa@55

      # (Opcional) Força o Hibernate a esperar pelo banco
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

      # Variáveis de ambiente para o JWT (lidas do application.properties)
      - JWT_SECRET=MINHA_CHAVE_SECRETA_E_LONGA_PARA_PRODUCAO_PETFLOW_2025
      - JWT_EXPIRATION_MS=3600000

# Define o volume nomeado para persistir os dados do banco
volumes:
  petflow-data:
